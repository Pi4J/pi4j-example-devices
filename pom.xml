<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ /*
  ~  *
  ~  * -
  ~  *   * #%L
  ~  *   * **********************************************************************
  ~  *   * ORGANIZATION  :  Pi4J
  ~  *   * PROJECT       :  Pi4J :: EXTENSION
  ~  *   * FILENAME      :  pom.xml
  ~  *   *
  ~  *   * This file is part of the Pi4J project. More information about
  ~  *   * this project can be found here:  https://pi4j.com/
  ~  *   * **********************************************************************
  ~ *   * %%
  ~  *   * Copyright (C) 2012 - 2021 Pi4J
  ~ *    * %%
  ~ *   * Licensed under the Apache License, Version 2.0 (the "License");
  ~ *   * you may not use this file except in compliance with the License.
  ~ *   * You may obtain a copy of the License at
  ~ *   *
  ~ *   *      http://www.apache.org/licenses/LICENSE-2.0
  ~ *   *
  ~ *   * Unless required by applicable law or agreed to in writing, software
  ~ *   * distributed under the License is distributed on an "AS IS" BASIS,
  ~ *   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ *   * See the License for the specific language governing permissions and
  ~ *   * limitations under the License.
  ~ *   * #L%
  ~  *
  ~  *
  ~  */
  ~
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.pi4j</groupId>
    <artifactId>pi4j-v2-devices</artifactId>
    <name>Pi4J :: DEVICE EXAMPLE :: Sample device project</name>
    <description>Pi4J TCA9548 Device Code</description>
    <version>0.0.1</version>
    <packaging>jar</packaging>


    <!-- BUILD PROPERTIES -->
    <properties>
        <!-- PROJECT ENCODING PROPERTIES -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- JAVA COMPILER VERSIONS -->
        <java.version>11</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
         <maven-jar-plugin.version>3.2.0</maven-jar-plugin.version>
        <maven-source-plugin.version>3.2.0</maven-source-plugin.version>
        <maven-bundle-plugin.version>5.1.3</maven-bundle-plugin.version>
        <maven-javadoc-plugin.version>3.3.2</maven-javadoc-plugin.version>
        <maven-antrun-plugin.version>3.0.0</maven-antrun-plugin.version>


        <!-- DEPENDENCIES VERSIONS  2.0.3  -SNAPSHOT  -->
        <slf4j.version>1.7.30</slf4j.version>
        <pi4j.version>2.5.0-SNAPSHOT</pi4j.version>

        <!-- BUILD PLUGIN VERSIONS -->
        <exec-maven-plugin.version>1.6.0</exec-maven-plugin.version>
        <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
        <maven-dependency-plugin.version>3.1.2</maven-dependency-plugin.version>
    </properties>

    <!-- DEPENDENCY REPOSITORIES -->
    <repositories>
        <repository>
            <id>oss-snapshots-repo</id>
            <name>Sonatype OSS Maven Repository</name>
            <url>https://oss.sonatype.org/content/groups/public</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>oss-snapshots-M2-repo</id>
            <name>Sonatype OSS Maven2 Repository</name>
            <url>https://mvnrepository.com/artifact/org.apache.felix/maven-bundle-plugin</url>
        </repository>
        <repository>
            <id>sonatype-oss-staging</id>
            <name>Sonatype Open Source Maven Repository</name>
            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2</url>
        </repository>
    </repositories>

    <dependencies>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <!-- change to use the default slf4 simple -->
        <dependency>
            <groupId>com.pi4j</groupId>
            <artifactId>pi4j-plugin-gpiod</artifactId>
            <version>${pi4j.version}</version>
        </dependency>
         <dependency>
                <groupId>net.java.dev.jna</groupId>
                <artifactId>jna</artifactId>
                <version>5.12.1</version>
            </dependency>
         <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>${slf4j.version}</version>
        </dependency>

        <!-- include Pi4J Core -->
        <dependency>
            <groupId>com.pi4j</groupId>
            <artifactId>pi4j-core</artifactId>
            <version>${pi4j.version}</version>
        </dependency>
        <dependency>
            <groupId>com.pi4j</groupId>
            <artifactId>pi4j-plugin-pigpio</artifactId>
            <version>${pi4j.version}</version>
        </dependency>
        <!--- log4j version 2   -->
        <!--dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>2.17.1</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>2.17.1</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
            <version>2.17.1</version>
        </dependency-->
        <!-- include Pi4J Plugins (Platforms and I/O Providers) -->
        <dependency>
            <groupId>com.pi4j</groupId>
            <artifactId>pi4j-plugin-raspberrypi</artifactId>
            <version>${pi4j.version}</version>
        </dependency>
        <dependency>
            <groupId>com.pi4j</groupId>
            <artifactId>pi4j-plugin-pigpio</artifactId>
            <version>${pi4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jetbrains</groupId>
            <artifactId>annotations</artifactId>
            <version>RELEASE</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.pi4j</groupId>
            <artifactId>pi4j-plugin-linuxfs</artifactId>
            <version>${pi4j.version}</version>
        </dependency>
    </dependencies>


    <build>
        <plugins>
            <!-- JAVA COMPILER -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <release>${java.version}</release>
                    <showDeprecation>true</showDeprecation>
                    <showWarnings>true</showWarnings>
                    <verbose>false</verbose>
                </configuration>
            </plugin>

            <!-- INCLUDE SOURCE JAR -->
             <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                 <version>${maven-source-plugin.version}</version>
                 <executions>
                     <execution>
                         <id>attach-sources</id>
                         <goals>
                             <goal>jar</goal>
                         </goals>
                     </execution>
                 </executions>
             </plugin>

            <!-- INCLUDE JAVADOC JAR -->
            <!--plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${maven-javadoc-plugin.version}</version>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin-->
            <!-- OSGi BUNDLE -->
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <version>${maven-bundle-plugin.version}</version>
                <configuration>
                    <instructions>
                        <Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>
                        <Bundle-Version>${project.version}</Bundle-Version>
                        <Export-Package>
                            com.pi4j.*,
                        </Export-Package>
                        <Private-Package>
                        </Private-Package>
                    </instructions>
                </configuration>
                <executions>
                    <execution>
                        <id>bundle-manifest</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>manifest</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- INCLUDE OSGi MANIFEST IN JAR -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
                    </archive>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- DEFAULT JAR EXECUTABLE CLASS -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>${exec-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <id>module-step</id>
                        <goals>
                            <goal>java</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <executable>java</executable>
                    <arguments>
                        <argument>--module-path</argument>
                        <argument>${project.build.directory}/distribution</argument>
                        <argument>--module</argument>
                      <!-- <argument>com.pi4j.devices.tca9548/com.pi4j.devices.tca9548.SampleTca9548App</argument>  -->
                        <argument>com.pi4j.devices.mcp23008/com.pi4j.devices.mcp23008.Mcp23008App</argument>
                    </arguments>
                </configuration>
            </plugin>

            <!-- BUILD THE FINAL JAR FILE IN THE /target/distribution PATH -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.1.2</version>
                <configuration>
                    <outputDirectory>${project.build.directory}/distribution</outputDirectory>
                </configuration>
            </plugin>
            <!--  DOWNLOAD RUNTIME DEPENDENCIES  -->
            <!-- COPY ANY RUNTIME SCRIPTS TO THE /target/distribution PATH  -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>${maven-antrun-plugin.version}</version>
                <executions>
                    <execution>
                        <id>copy-assetsPY</id>
                        <phase>package</phase>
                        <configuration>
                            <target>
                                <copy todir="${project.build.directory}/distribution" overwrite="true" flatten="true">
                                    <fileset dir="assets" includes="*.py"> </fileset>
                                </copy>
                                <copy todir="${project.build.directory}/distribution" overwrite="true" flatten="true">
                                    <fileset dir="assets" includes="*.jpg"> </fileset>
                                </copy>
                                <chmod dir="${project.build.directory}/distribution" perm="ugo+rx" includes="**/*.py"/>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>${maven-antrun-plugin.version}</version>
                <executions>
                    <execution>
                        <id>copy-assetsSH</id>
                        <phase>package</phase>
                        <configuration>
                            <target>
                                <copy todir="${project.build.directory}/distribution" overwrite="true" flatten="true">
                                    <fileset dir="assets" includes="*.sh"> </fileset>
                                </copy>
                                <chmod dir="${project.build.directory}/distribution" perm="ugo+rx" includes="**/*.sh"/>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!--  DOWNLOAD RUNTIME DEPENDENCIES  -->
            <!-- COPY ANY RUNTIME SCRIPTS TO THE /target/distribution PATH  -->
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>${maven-antrun-plugin.version}</version>
                <executions>
                    <execution>
                        <id>copyPY</id>
                        <phase>install</phase>
                        <configuration>
                            <target>
                                <copy todir="${project.build.directory}/distribution" overwrite="true" flatten="true">
                                    <fileset dir="assets" includes="*.py"> </fileset>
                                </copy>
                                <chmod dir="${project.build.directory}/distribution" perm="ugo+rx" includes="**/*.py"/>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>${maven-antrun-plugin.version}</version>
                 <executions>
                    <execution>
                        <id>copySH</id>
                        <phase>install</phase>
                        <configuration>
                            <target>
                                <copy todir="${project.build.directory}/distribution" overwrite="true" flatten="true">
                                    <fileset dir="assets" includes="*.sh"> </fileset>
                                </copy>
                                <chmod dir="${project.build.directory}/distribution" perm="ugo+rx" includes="**/*.sh"/>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>


            <!-- DOWNLOAD RUNTIME DEPENDENCIES -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>${maven-dependency-plugin.version}</version>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/distribution</outputDirectory>
                            <includeScope>runtime</includeScope>
                            <excludeTransitive>false</excludeTransitive>
                            <overWriteReleases>false</overWriteReleases>
                            <overWriteSnapshots>true</overWriteSnapshots>
                            <overWriteIfNewer>true</overWriteIfNewer>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
